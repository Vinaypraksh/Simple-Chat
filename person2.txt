
import java.io.*;
import java.awt.*;
import java.net.*;
import javax.swing.*;
import java.awt.event.*;
public class Server1 extends JFrame{
	private static final long serialVersionUID = 1L;
	private JTextField userText;
	private JTextArea chatWindow;
	private ObjectOutputStream output;
	private ObjectInputStream input;
	private ServerSocket server;
	private Socket connection;
	//constructor
	public Server1(){
		super("Fast Messaging");
		userText = new JTextField();
		userText.setEditable(false);
		userText.addActionListener(
				new ActionListener(){
					public void actionPerformed(ActionEvent event){
						sendMessage(event.getActionCommand());
						userText.setText("");
					}
				}
				);
		add(userText, BorderLayout.NORTH);
		chatWindow = new JTextArea();
		add(new JScrollPane(chatWindow));
		setSize(300,150);
		setVisible(true);
	}
	// set up and run the server
	public void startRunning(){
		try{
			server = new ServerSocket(6789, 100);
			while(true){
				try{
					//connect and start conversation
					waitForConnection();
					setUpStreams();
					whileChatting();
					
				} catch(EOFException eofException){
					showMessage("\n Server ended the Connection! ");
				}finally{
					closeCrap();
				}
			}
		}catch(IOException e){
			e.printStackTrace();
			}
	}
	//wait for connection then display connection information
	private void waitForConnection() throws IOException{
		showMessage("Waiting for someone to connect...\n");
		connection = server.accept();
		showMessage("Now connected to"+ connection.getInetAddress().getHostName());
	}
	// set up the streams send and receive data
	private void setUpStreams() throws IOException{
		output = new ObjectOutputStream(connection.getOutputStream());
		output.flush();
		input = new ObjectInputStream(connection.getInputStream());
		showMessage("\n streams are now setup! \n");
	}
	// while chat conversation
	 private void whileChatting() throws IOException{
		 String message = "You are now connected! ";
		 sendMessage(message);
		 abletoType(true);
		 do{		
			 try{
				 // having conversation 
				 message = (String)input.readObject();
				 showMessage("\n"+ message);
			 }catch(ClassNotFoundException classnotfoundException){
				 showMessage("\n I don't know what the nonsense that user sent! ");
			 }
		 }while(!message.equals("CLIENT - END"));
	 }
	 // closing down the streams and sockets after conversation
	 public void closeCrap(){
		 showMessage("\n Closing Connections... \n ");
		 abletoType(false);
		 try{
			 output.close();
			 input.close();
			 connection.close();
		 }
		 catch(IOException ioexception){
			 ioexception.printStackTrace();
		 }
	 }
	 // send message to client
	 private void sendMessage(String message){
		 try{
			 output.writeObject("SERVER - "+ message);
			 output.flush();
			 showMessage("\n SERVER -"+ message);
		 }catch(IOException ioException){
			 chatWindow.append("\n Error: Dude I Can't send message! ");
		 }
	 }
	 // update chatwindow
	 private void showMessage(final String text){
		 SwingUtilities.invokeLater(
				 new Runnable(){
					 public void run(){
						 chatWindow.append(text);
					 }
				 }
		);
	 }
	 // permission to user to type
	 private void abletoType(final boolean b){
		 SwingUtilities.invokeLater(
				 new Runnable(){
					 public void run(){
					userText.setEditable(b);	 
				 }
			 }
		);
	 }
	}
