
import java.io.*;
import java.awt.*;
import java.net.*;
import java.awt.event.*;
import javax.swing.*;

public class Client1 extends JFrame{

	private static final long serialVersionUID = 1L;
	private JTextField userText;
	private JTextArea chatWindow;
	private ObjectOutputStream output;
	private ObjectInputStream input;
	private String message;
	private String serverIp;
	private Socket connection;
	
	//constructor
	public Client1(String host){
		super("Client messen!");
		serverIp = host;
		userText = new JTextField();
		userText.setEditable(false);
		userText.addActionListener(
				new ActionListener(){
					public void actionPerformed(ActionEvent event){
					sendData(event.getActionCommand());
					userText.setText("");
					}
				}
				);
		add(userText, BorderLayout.NORTH);
		chatWindow = new JTextArea();
		add(new JScrollPane(chatWindow), BorderLayout.CENTER);
		setSize(300,150);
		setVisible(true);
					}
// connect to server
	public void startRunning() throws IOException{
			
				try{
					//connect and start conversation
					connecttoServer();
					setUpStreams();
					whileChatting();
					
				} catch(EOFException eofException){
					showMessage("\n Client terminated the Connection! ");
				}finally{
					closeCrap();
				}
			}
		// connecting
	private void connecttoServer() throws IOException{
		showMessage("Attempting connection...\n");
		connection = new Socket(InetAddress.getByName(serverIp), 6789);
		showMessage("Connected to :"+ connection.getInetAddress().getHostName());
	}
	// set up the streams send and receive data
		private void setUpStreams() throws IOException{
			output = new ObjectOutputStream(connection.getOutputStream());
			output.flush();
			input = new ObjectInputStream(connection.getInputStream());
			showMessage("\n streams are now good to go! \n");
		}
		// while chat conversation
		 private void whileChatting() throws IOException{
			 abletoType(true);
		     do{
		    	 try{
					 // having conversation 
					 message = (String)input.readObject();
					 showMessage("\n"+ message);
				 }catch(ClassNotFoundException classnotfoundException){
					 showMessage("\n I don't know  that object! ");
				 }
		     }while(!message.equals("SERVER - END"));
		     }
		 // closing down the streams and sockets after conversation
		 public void closeCrap(){
			 showMessage("\n Closing Connections... \n ");
			 abletoType(false);
			 try{
				 output.close();
				 input.close();
				 connection.close();
			 }
			 catch(IOException ioexception){
				 ioexception.printStackTrace();
			 }
		 }
		 // send message to Server
		 private void sendData(String message){
			 try{
				 output.writeObject("CLIENT - "+ message);
				 output.flush();
				 showMessage("\n CLIENT -"+ message);
			 }catch(IOException ioException){
				 chatWindow.append("\n Somrthing missed up sending messages! ");
			 }
		 }
		// update chatwindow
		 private void showMessage(final String viny){
			 SwingUtilities.invokeLater(
					 new Runnable(){
						 public void run(){
							 chatWindow.append(viny);
						 }
					 }
			);
		 }
		 // gives permission to user to type into box
		 private void abletoType(final boolean b){
			 SwingUtilities.invokeLater(
					 new Runnable(){
						 public void run(){
						userText.setEditable(b);	 
					 }
				 }
			);
		 } 
}
